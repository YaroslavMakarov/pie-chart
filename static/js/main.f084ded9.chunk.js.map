{"version":3,"sources":["components/Header/Header.tsx","helpers/helprs.ts","components/HomePage/HomePage.tsx","components/PieChunk/PieChunk.tsx","components/PieChart/PieChart.tsx","App.tsx","index.tsx"],"names":["Header","location","useLocation","className","to","exact","activeClassName","pathname","getCoordinatesForPercent","percent","Math","cos","PI","sin","getRandomColor","color","i","floor","random","HomePage","pieChunks","addPieChunk","useState","textInputValue","changeTextInputValue","numberInputValue","setNumberInputValue","textLengthChecker","setTextLengthChecker","numberChecker","setNumberChecker","type","value","placeholder","onChange","event","target","trim","handlerChangeTextInput","cn","handlerChangeNumberInput","onClick","length","isNaN","Number","id","uuidv4","name","total","PieChunk","startXFull","startYFull","endXFull","endYFull","largeArcFlag","endTextX","endTextY","index","startXHalf1","startYHalf1","startXHalf2","startYHalf2","endXHalf1","endYHalf1","endXHalf2","endYHalf2","chunkPerc","d","fill","fontSize","xlinkHref","startOffset","PieChart","startPercentPieChunk","totalSum","reduce","acc","b","viewBox","style","transform","xmlns","xmlnsXlink","map","cir","chunkPercHalf","key","App","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f084ded9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header  = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <NavLink\r\n                to=\"/\"\r\n                exact\r\n                className=\"header__link\"\r\n                activeClassName={\r\n                    location.pathname === \"/\"\r\n                        ? \"header__link--active\"\r\n                        : \"\"\r\n                }\r\n            >\r\n                Home\r\n            </NavLink>\r\n            <NavLink\r\n                to=\"/pieChart\"\r\n                exact\r\n                className=\"header__link\"\r\n                activeClassName={\r\n                    location.pathname === \"/pieChart\"\r\n                        ? \"header__link--active\"\r\n                        : \"\"\r\n                }\r\n            >\r\n                Pie Chart\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","export const getCoordinatesForPercent = (percent: number): number[] => {\r\n    const x = Math.cos(2 * Math.PI * percent);\r\n    const y = Math.sin(2 * Math.PI * percent);\r\n    return [x, y];\r\n};\r\n\r\nexport const getRandomColor = (): string => {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport cn from \"classnames\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getRandomColor } from \"../../helpers/helprs\";\r\nimport \"./HomePage.scss\";\r\n\r\ntype Props = {\r\n    pieChunks: Chunk[];\r\n    addPieChunk: (arg: Chunk[]) => void;\r\n}\r\n\r\nconst HomePage: React.FC<Props> = ({ pieChunks, addPieChunk }) => {\r\n    const [textInputValue, changeTextInputValue] = useState<string>(\"\");\r\n    const [numberInputValue, setNumberInputValue] = useState<string>(\"\");\r\n    const [textLengthChecker, setTextLengthChecker] = useState<boolean>(false);\r\n    const [numberChecker, setNumberChecker] = useState<boolean>(false);\r\n\r\n    const handlerChangeTextInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        changeTextInputValue(value.trim());\r\n    };\r\n\r\n    const handlerChangeNumberInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = event.target.value;\r\n        setNumberInputValue(value.trim());\r\n    };\r\n\r\n    const handlerAcceptInputs = () => {\r\n        if (textInputValue.length < 2 || textInputValue.length > 10) {\r\n            setTextLengthChecker(true);\r\n        } else if (isNaN(Number(numberInputValue)) || numberInputValue === \"\") {\r\n            setNumberChecker(true);\r\n        } else {\r\n            addPieChunk(\r\n                [...pieChunks,\r\n                    ...[\r\n                        {\r\n                            id: uuidv4(),\r\n                            name: textInputValue,\r\n                            total: Number(numberInputValue),\r\n                            color: getRandomColor(),\r\n                        }\r\n                    ]\r\n                ]\r\n            );\r\n            changeTextInputValue(\"\");\r\n            setNumberInputValue(\"\");\r\n            setTextLengthChecker(false);\r\n            setNumberChecker(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home__input-wrapper\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"home__input\"\r\n                    value={textInputValue}\r\n                    placeholder=\"enter name\"\r\n                    onChange={(event => handlerChangeTextInput(event))}\r\n                />\r\n                <div className={cn(\r\n                    \"home__input-warning\",\r\n                    {\r\n                        \"home__input-warning--active\": textLengthChecker,\r\n                    }\r\n                )}>\r\n                    Length must be longer than 2 letter or shorter than 10 letter\r\n                </div>\r\n            </div>\r\n            <div className=\"home__input-wrapper\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={numberInputValue}\r\n                    className=\"home__input\"\r\n                    placeholder=\"enter count\"\r\n                    onChange={(event => handlerChangeNumberInput(event))}\r\n\r\n                />\r\n                <div className={cn(\r\n                    \"home__input-warning\",\r\n                    {\r\n                        \"home__input-warning--active\": numberChecker,\r\n                    }\r\n                )}>\r\n                    Value must be a number\r\n                </div>\r\n            </div>\r\n            <button\r\n                type=\"button\"\r\n                className=\"home__button\"\r\n                onClick={() => handlerAcceptInputs()}\r\n            >\r\n                accept\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport \"./PieChunk.scss\";\r\n\r\ntype Props = {\r\n    color: string;\r\n    startXFull: number;\r\n    startYFull: number;\r\n    endXFull: number;\r\n    endYFull: number;\r\n    largeArcFlag: number;\r\n    name: string;\r\n    endTextX: number;\r\n    endTextY: number;\r\n    index: string;\r\n    startXHalf1: number;\r\n    startYHalf1: number;\r\n    startXHalf2: number;\r\n    startYHalf2: number;\r\n    endXHalf1: number;\r\n    endYHalf1: number;\r\n    endXHalf2: number;\r\n    endYHalf2: number;\r\n    chunkPerc: number;\r\n}\r\n\r\nconst PieChunk: React.FC<Props> = ({\r\n                                       color,\r\n                                       startXFull,\r\n                                       startYFull,\r\n                                       endXFull,\r\n                                       endYFull,\r\n                                       largeArcFlag,\r\n                                       name,\r\n                                       endTextX,\r\n                                       endTextY,\r\n                                       index,\r\n                                       startXHalf1,\r\n                                       startYHalf1,\r\n                                       startXHalf2,\r\n                                       startYHalf2,\r\n                                       endXHalf1,\r\n                                       endYHalf1,\r\n                                       endXHalf2,\r\n                                       endYHalf2,\r\n                                       chunkPerc,\r\n                                   }) => {\r\n\r\n\r\n    return (\r\n        <g className=\"chunk\"\r\n        >\r\n            {chunkPerc > 0.5\r\n            ? (<>\r\n                    <path\r\n                        d={`M ${startXHalf1} ${startYHalf1} A 1 1 0 ${largeArcFlag} 1 ${endXHalf1} ${endYHalf1} L 0 0`}\r\n                        fill={color}\r\n                    />\r\n                    <path\r\n                    d={`M ${startXHalf2} ${startYHalf2} A 1 1 0 ${largeArcFlag} 1 ${endXHalf2} ${endYHalf2} L 0 0`}\r\n                    fill={color}\r\n                    />\r\n                </>)\r\n                : <path\r\n                    d={`M ${startXFull} ${startYFull} A 1 1 0 ${largeArcFlag} 1 ${endXFull} ${endYFull} L 0 0`}\r\n                    fill={color}\r\n                />}\r\n            <defs>\r\n                <path\r\n                    id={`text${index}`}\r\n                    d={`\r\n                        M 0 0 L ${endTextX} ${endTextY}\r\n                    `}\r\n                />\r\n            </defs>\r\n            <text\r\n                fontSize=\"0.1px\"\r\n                fill=\"black\"\r\n                className=\"chunk__text\"\r\n            >\r\n                <textPath\r\n                    xlinkHref={`#text${index}`}\r\n                    startOffset=\"20%\"\r\n                >\r\n                    {name}\r\n                </textPath>\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nexport default PieChunk;\r\n","import React from \"react\";\r\nimport { getCoordinatesForPercent } from \"../../helpers/helprs\";\r\nimport \"./PieChart.scss\";\r\nimport PieChunk from \"../PieChunk/PieChunk\";\r\n\r\ntype Props = {\r\n    pieChunks: Chunk[];\r\n};\r\n\r\nconst PieChart: React.FC<Props> = ({ pieChunks }) => {\r\n    let percent = 0;\r\n    let startPercentPieChunk = 0;\r\n    const totalSum = pieChunks.reduce((acc, b) => {\r\n        return acc + b.total;\r\n    }, 0);\r\n    let startXFull = 0;\r\n    let startYFull = 0;\r\n    let endXFull = 0;\r\n    let endYFull = 0;\r\n    let startXHalf1 = 0;\r\n    let startYHalf1 = 0;\r\n    let endXHalf1 = 0;\r\n    let endYHalf1 = 0;\r\n    let startXHalf2 = 0;\r\n    let startYHalf2 = 0;\r\n    let endXHalf2 = 0;\r\n    let endYHalf2 = 0;\r\n    const chunksArrLength = pieChunks.length;\r\n\r\n\r\n    if (chunksArrLength === 0) {\r\n        return (\r\n            <div className=\"chunk__header-wrapper\">\r\n                <h1 className=\"chunk__header\">\r\n                    No items for pie chunk, please add items\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            <svg\r\n                className=\"chart__svg\"\r\n                viewBox=\"-1.5 -1.5 3 3\"\r\n                style={{transform: \"rotate(-90deg)\"}}\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n            >\r\n                {pieChunks.map(cir => {\r\n                    const chunkPerc = cir.total / totalSum;\r\n                    if (chunkPerc > 0.5) {\r\n                        const chunkPercHalf = chunkPerc / 2;\r\n                        [startXHalf1, startYHalf1] = getCoordinatesForPercent(percent);\r\n                        percent += chunkPercHalf;\r\n                        [endXHalf1, endYHalf1] = getCoordinatesForPercent(percent);\r\n                        [startXHalf2, startYHalf2] = getCoordinatesForPercent(percent);\r\n                        percent += chunkPercHalf;\r\n                        [endXHalf2, endYHalf2] = getCoordinatesForPercent(percent);\r\n                    } else {\r\n                        [startXFull, startYFull] = getCoordinatesForPercent(percent);\r\n                        percent += chunkPerc;\r\n                        [endXFull, endYFull] = getCoordinatesForPercent(percent);\r\n                    }\r\n                    const endPercentText = ((percent - startPercentPieChunk) / 2) + startPercentPieChunk;\r\n                    const [endTextX, endTextY] = getCoordinatesForPercent(endPercentText);\r\n                    startPercentPieChunk= percent;\r\n                    const largeArcFlag = (chunkPerc / 100 > 0.5) ? 1 : 0;\r\n\r\n                    return (\r\n                        <PieChunk\r\n                            key={cir.id}\r\n                            color={cir.color}\r\n                            startXFull={startXFull}\r\n                            startYFull={startYFull}\r\n                            endXFull={endXFull}\r\n                            endYFull={endYFull}\r\n                            startXHalf1={startXHalf1}\r\n                            startYHalf1={startYHalf1}\r\n                            startXHalf2={startXHalf2}\r\n                            startYHalf2={startYHalf2}\r\n                            endXHalf1={endXHalf1}\r\n                            endYHalf1={endYHalf1}\r\n                            endXHalf2={endXHalf2}\r\n                            endYHalf2={endYHalf2}\r\n                            largeArcFlag={largeArcFlag}\r\n                            name={cir.name}\r\n                            endTextX={endTextX}\r\n                            endTextY={endTextY}\r\n                            index={cir.id}\r\n                            chunkPerc={chunkPerc}\r\n                        />\r\n                    );\r\n                })}\r\n            </svg>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { useState } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport './App.scss';\nimport Header from \"./components/Header/Header\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport PieChart from \"./components/PieChart/PieChart\";\n\nfunction App() {\n    const [pieChunks, addPieChunk] = useState<Chunk[]>([]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n          <Route\n              path=\"/\"\n              exact\n              render={\n                  () =>\n                      <HomePage\n                          pieChunks={pieChunks}\n                          addPieChunk={addPieChunk}\n                      />\n              }\n          />\n          <Route\n              path=\"/pieChart\"\n              exact\n              render={\n                  () =>\n                      <PieChart\n                          pieChunks={pieChunks}\n                      />\n              }\n          />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <App />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}